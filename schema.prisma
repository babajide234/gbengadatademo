
// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Post {
  id        String     @default(cuid()) @id
  title     String
  content   String?
  published Boolean @default(false)
  author    User?   @relation(fields: [authorId], references: [id])
  authorId  String?
}

model User {
  id            String       @default(cuid()) @id
  name          String?
  email         String?   @unique
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  posts         Post[]
  @@map(name: "users")
}

// model Address {
//   id        String     @id @default(cuid())
//   address   String     // Street Address
//   memberId  String     // Member ID (Foreign Key)
//   createdAt DateTime   @default(now()) @map(name: "created_at")
//   updatedAt DateTime   @updatedAt @map(name: "updated_at")
// }

// model State {
//   id        String     @id @default(cuid())
//   name      String     
//   members   Member[]   
//   createdAt DateTime   @default(now()) @map(name: "created_at")
//   updatedAt DateTime   @updatedAt @map(name: "updated_at")
// }

// model LGA {
//   id        String     @id @default(cuid())
//   name      String     
//   stateId   String     
//   members   Member[]   
//   createdAt DateTime   @default(now()) @map(name: "created_at")
//   updatedAt DateTime   @updatedAt @map(name: "updated_at")
// }

// model Ward {
//   id        String     @id @default(cuid())
//   name      String     
//   lgaId     String     
//   members   Member[]   
//   createdAt DateTime   @default(now()) @map(name: "created_at")
//   updatedAt DateTime   @updatedAt @map(name: "updated_at")
// }

// model PollingUnitCode {
//   id        String     @id @default(cuid())
//   code      String     
//   wardId    String     
//   members   Member[]   
//   createdAt DateTime   @default(now()) @map(name: "created_at")
//   updatedAt DateTime   @updatedAt @map(name: "updated_at")
// }

// model Category {
//   id       String     @id @default(cuid())
//   name     String     // Category Name
//   members  Member[]   // Members belonging to this category
//   createdAt DateTime   @default(now()) @map(name: "created_at")
//   updatedAt DateTime   @updatedAt @map(name: "updated_at")
// }

// enum Gender {
//   M // Male
//   F // Female
// }



// model Member {
//   id                   String        @id @default(cuid())
//   title                String?       // e.g., "Mr.", "Ms.", "Mrs.", etc.
//   surname              String        // Surname (Last Name)
//   firstName            String        // First Name
//   otherNames           String?       // Other Names
//   gender               Gender        // Gender (M/F)
//   phoneNumber          String        // Phone Number
//   emailAddress         String?       // Email Address
//   addressId            String        // Address ID (Foreign Key)
//   stateId              String        // State ID (Foreign Key)
//   lgaId                String        // LGA ID (Foreign Key)
//   wardId               String        // Ward ID (Foreign Key)
//   pollingUnitCodeId    String        // Polling Unit Code ID (Foreign Key)
//   inecVotingCardNumber String?       // INEC Voting Card Number
//   categories           Category[]    // Category (Many-to-Many relationship)
//   createdAt            DateTime      @default(now()) @map(name: "created_at")
//   updatedAt            DateTime      @updatedAt @map(name: "updated_at")
// }


model Member {
  id                   String        @id @default(cuid())
  title                String?       // e.g., "Mr.", "Ms.", "Mrs.", etc.
  surname              String        // Surname (Last Name)
  firstName            String        // First Name
  otherNames           String?       // Other Names
  gender               Gender        // Gender (M/F)
  phoneNumber          String        // Phone Number
  emailAddress         String?       // Email Address
  address              String?       // Street Address
  state                String        // State
  lga                  String        // Local Government Area (LGA)
  ward                 String        // Ward
  wardCode             String        // Ward Code
  pollingUnitCode      String        // Polling Unit Code
  inecVotingCardNumber String?       // INEC Voting Card Number
  categories           Category[]    // Category (Many-to-Many relationship)
  createdAt            DateTime      @default(now()) @map(name: "created_at")
  updatedAt            DateTime      @updatedAt @map(name: "updated_at")
}

model Category {
  id       String     @id @default(cuid())
  name     String     // Category Name
  members  Member[]   // Members belonging to this category
  createdAt DateTime   @default(now()) @map(name: "created_at")
  updatedAt DateTime   @updatedAt @map(name: "updated_at")
  @@map( name: "members")
}

enum Gender {
  M // Male
  F // Female
}
